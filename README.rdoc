= Salesforce CLI library for Ruby
https://badge.fury.io/rb/sf_cli.png

This is a class library for introducing {Salesforce CLI}[https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_top.htm] to Ruby scripting.<br>
It is designed to be similar usability to the original command.<br>
Currently only *sf* command is the target of development.

[rubygems]          https://rubygems.org/gems/sf_cli
[official document] https://tmkw.github.io/sf_cli/

== prerequisite
{Salesforce CLI}[https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_top.htm] must be installed.<br>
As of as of September in 2024, ver.2.56.7 is the development target.

== install
Rubygem::
  the simplest way:
    $ gem install sf_cli
Bundler::
  in Gemfile:
    gem 'sf_cli'
  then,
    $ bundle install
== Usage
Load module
  require 'sf_cli'

Login to org
  sf.org.login_web

Get Salesforce Object schema 
  sf.sobject.describe :Account

Get a record
  sf.data.get_record :Account, record_id: 'xxxxxxx'
  sf.data.get_record :Account, where: {Name: 'Jonny B.Good', Country: 'USA'}

Execute SOQL
  sf.data.query "SELECT Id, Name FROM Account LIMIT 1" # => [{Id: "abc", Name: "account name"}]

Create a record
  sf.data.create_record :TheCustomObject__c, values: {Name: "John Smith", Age: 33}

Update a record
  sf.data.update_record :Account, record_id: 'xxxxxxx', values: {Name: 'New Account Name'}
  sf.data.update_record :Hoge__c, where: {Name: 'Jonny B.Good', Country: 'USA'}, values: {Phone: 'xxxxx', bar: 2000}

Delete a record
  sf.data.delete_record :Hoge__c, record_id: 'xxxxxxx'
  sf.data.delete_record :Hoge__c, where: {Name: 'Jonny B.Good', Country: 'USA'}

Using Bulk API 2.0
  sf.data.upsert_bulk sobject: :TestCustomObject__c, file: 'upsert.csv', wait: 5  # waiting for 5 minutes at maximum

Run Apex
  sf.apex.run file: 'path/to/file'
  sf.apex.run file: StringIO.new("System.debug('Hello World')")
== Object Model Support (experimental)
With sf command:
  rows = sf.data.query "SELECT Id, Name FROM Contact WHERE Name = 'Akin Kristen'", model_class: Contact
  rows.first      # <Contact: @Id="0035j00001RW3xbAAD", @Name="Akin Kristen">
  rows.first.Name # Akin Kristen
Doing the same thing independently:
  contact = Contact.select(:Id, :Name).where(Name: 'Akin Kristen').take
  contact.Name # Akin Kristen
